# adapted from built-in 'mail' fn, allows to send embedded html
(de mail-html (Host Port From To Sub Att . Prg)
   (let? S
      (if (pair Port)
         (pipe (exec "@bin/ssl" Host (fin Port)))
         (connect Host Port) )
      (let B (pack "==" (date) "-" (time T) "-" (usec) "==")
         (prog1
            (and
               (pre? "220 " (in S (line T)))
               (out S (prinl "HELO " (cdr (member "@" (chop (fin From)))) "^M"))
               (pre? "250 " (in S (line T)))
               (or
                  (atom Port)
                  (and
                     (out S
                        (prin "AUTH PLAIN ")
                        (pipe
                           (prog
                              (prin (car Port))
                              (wr 0)
                              (prin (car Port))
                              (wr 0)
                              (prin (cadr Port)) )
                           (prBase64 T) )
                        (prinl "^M") )
                     (pre? "235 " (in S (line T))) ) )
               (out S (prinl "MAIL FROM:" (fin From) "^M"))
               (pre? "250 " (in S (line T)))
               (if (atom To)
                  (_rcpt To)
                  (find bool (mapcar _rcpt To)) )
               (out S (prinl "DATA^M"))
               (pre? "354 " (in S (line T)))
               (out S
                  (prinl "From: " (fin From) "^M")
                  (prinl "To: " (or (fin To) (glue "," To)) "^M")
                  (prin "Subject: ")
                  (ifn (find > (chop Sub) '("~" .))
                     (prinl Sub "^M")
                     (prin "=?utf-8?B?")
                     (pipe (prin Sub) (prBase64 T))
                     (prinl "?=^M") )
                  (when (pair From)
                     (prinl "Reply-To: " (car From) "^M") )
                  (prinl "User-Agent: PicoLisp^M")
                  (prinl "MIME-Version: 1.0^M")
                  (when Att
                     (prinl "Content-Type: multipart/mixed; boundary=\"" B "\"^M")
                     (prinl "^M")
                     (prinl "--" B "^M")
                     (unless (cadr Att)
                        (prinl "Content-Type: multipart/alternative; boundary=\"==" B "==\"^M")
                        (prinl "^M")
                        (prinl "--==" B "==^M") ) )
                  (prinl "Content-Type: text/html; charset=UTF-8^M")
                  (prinl "Content-Transfer-Encoding: 8bit^M")
                  (prinl "^M")
                  (prinl "<html><body>^M")
                  (prEval Prg 2)
                  (prinl "</body></html>^M")
                  (prinl "^M")
                  (when Att
                     (loop
                        (if (cadr Att)
                           (prinl "--" B "^M")
                           (prinl "--==" B "==^M") )
                        (prin "Content-Type: " (or (caddr Att) "application/octet-stream"))
                        (and (cadr Att) (prin "; name=\"" @ "\""))
                        (prinl "^M")
                        (prinl
                           "Content-Transfer-Encoding: "
                           (if (cadr Att) "base64" "8bit")
                           "^M" )
                        (prinl "^M")
                        (in (car Att)
                           (ifn (cadr Att)
                              (echo)
                              (prBase64 18)
                              (prinl) ) )
                        (prinl "^M")
                        (unless (cadr Att)
                           (prinl "--==" B "==--^M")
                           (prinl "^M") )
                        (NIL (setq Att (cdddr Att))) )
                     (prinl "--" B "--^M") )
                  (prinl ".^M")
                  (prinl "QUIT^M") )
            T )
         (close S) ) ) ) )
